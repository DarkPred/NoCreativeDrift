import net.darkhax.curseforgegradle.TaskPublishCurseForge

plugins {
    id 'multiloader-loader'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.spongepowered.mixin' version '0.7-SNAPSHOT'
    id "com.modrinth.minotaur" version "2.+"
    id "net.darkhax.curseforgegradle" version "1.1.25"
}

minecraft {
    mappings channel: 'official', version: minecraft_version

    copyIdeResources = true //Calls processResources when in dev


    runs {
        client {
            workingDirectory file('runs/client')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Client'
            mods {
                modClientRun {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory file('runs/server')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Server'
            mods {
                modServerRun {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory file('runs/data')
            ideaModule "${rootProject.name}.${project.name}.main"
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            taskName 'Data'
            mods {
                modDataRun {
                    source sourceSets.main
                }
            }
        }
    }
}
sourceSets.main.resources.srcDir 'src/generated/resources'

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    compileOnly(annotationProcessor('com.google.auto.service:auto-service:1.1.1'))

    compileOnly fg.deobf("curse.maven:simplyjetpacks-251792:5722115") //1.20.1-2.10.0.0
    compileOnly fg.deobf("maven.modrinth:cucumber:7.0.12")
    compileOnly fg.deobf("maven.modrinth:iron-jetpacks:${iron_jetpacks_version}")
}

jar.finalizedBy('reobfJar')

sourceSets.each {
    def dir = layout.buildDirectory.dir("sourcesSets/$it.name")
    it.output.resourcesDir = dir
    it.java.destinationDirectory = dir
}

modrinth {
    token = System.getenv("MODRINTH_TOKEN") ?: "no value"
    projectId = "VPrmY5T9"
    versionNumber.set("$minecraft_version-$mod_version-${project.name}")
    versionType.set("release")
    uploadFile.set(tasks.jar)
    versionName = "$mod_version for Forge $minecraft_version"
    gameVersions = game_versions.split(",").toList()
    debugMode = true
    dependencies {
        optional.project("iron-jetpacks")
    }
    changelog.set(rootProject.file("CHANGELOG.md").text)
}
tasks.register('publishCurseForge', TaskPublishCurseForge) {
    group = "publishing"
    description = "Publishes jar to CurseForge"
    apiToken = System.getenv("CURSEFORGE_TOKEN") ?: "no value"
    debugMode = true
    var mainFile = upload(395069, tasks.jar)
    mainFile.addGameVersion(game_versions.split(","))
    mainFile.changelog = rootProject.file("CHANGELOG.md").text
    mainFile.changelogType = "markdown"
    mainFile.releaseType = "release"
    mainFile.addOptional("simply-jetpacks-2", "iron-jetpacks", "mekanism")
}

tasks.named("publish") {
    finalizedBy("modrinth", "publishCurseForge")
}
