plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.spongepowered.mixin' version '0.7-SNAPSHOT'
}
plugins {
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}
version = minecraft_version + "-" + mod_version
group = 'com.github.darkpred.nocreativedrift' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "${mod_name}-forge"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'parchment', version: '2022.11.20-1.19.2'

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') // Currently, this location cannot be changed from the default.

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                nocreativedrift {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                nocreativedrift {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'nocreativedrift', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                nocreativedrift {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven {
        url "https://www.cursemaven.com"
    }
    maven { url "https://maven.shedaniel.me/" }
}

dependencies {
    minecraft 'net.minecraftforge:forge:' + minecraft_version + '-' + forge_version
    compileOnly fg.deobf("curse.maven:ironjetpacks-284497:3910467") //1.19.1-6.0.0
    compileOnly fg.deobf("curse.maven:cucumber-272335:3910374") //1.19.1-6.0.0
    compileOnly fg.deobf("curse.maven:mekanism-268560:3922056") //1.19.2-10.3.2.469
    compileOnly fg.deobf("curse.maven:controllable-317269:3936915") //1.19.2-0.16.
    implementation fg.deobf("curse.maven:invmove-581854:4346455") //1.19.3-0.8.2
    runtimeOnly fg.deobf("me.shedaniel.cloth:cloth-config-forge:8.2.88") //dep for invmove
}
jar {
    manifest {
        attributes([
                "Specification-Title": "nocreativedrift",
                "Specification-Vendor": "DarkPred",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": mod_version,
                "Implementation-Vendor" :"DarkPred",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
